UFind.find: <B: Type> -> UFind -> Bits -> (UFind -> Bits -> Nat -> B) -> B
  <B> (uf) (path) (k)
  let found = Map.lookup_with<UNode>(path)(UNode.root(Nat.zero))(uf)
  found<() B>
  | (node) (uf)
    node<() B>
    | (node.rank) k(uf)(path)(node.rank);
    | (node.parent)
      UFind.find<B>(uf)(node.parent)
      | (uf) (root) (rank)
        let uf = Map.insert<UNode>(path)(UNode.link(root))(uf)
        k(uf)(root)(rank);;;
