Parser.label :
  <S: Type> ->
  <E: Type> ->
  <A: Type> ->
  String ->
  Parser(S)(E)(A) ->
  Parser(S)(E)(A)

  <S> <E> <A> (label) (p)
  <X> (s1) (empty_value) (empty_error) (eaten_value) (eaten_error)
  p<X>(s1)
  | empty_value;
  | (s2) (e)
    e<() X>
    | (pos) (us) ()
      empty_error(s2)
      | let es = List.single<Parser.Error.Item>(Parser.Error.Item.label(label))
        Parser.Error.make_trivial<E>(pos)(us)(es);;
    | () () empty_error(s2)(e);;
  | eaten_value;
  | eaten_error;

