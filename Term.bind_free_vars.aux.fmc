Term.bind_free_vars.aux: Term -> Nat -> Nat -> Term
  (term) (depth) (initial_depth)
  term<() Term>
  | (term.hash) (term.indx)
    Nat.lte(term.indx)(depth)<() Term>
    | Term.var(term.indx);
    | let abs = Nat.sub(Nat.sub(initial_depth)(Nat.1))(Nat.sub(term.indx)(depth))
      Term.bound(abs);;
  | (term.hash) (term.name) Term.ref(term.name);
  | (term.hash) Term.typ;
  | (term.hash) (term.eras) (term.self) (term.name) (term.bind) (term.body)
    let bind = Term.bind_free_vars.aux(term.bind)(Nat.succ(depth))(initial_depth)
    let body = Term.bind_free_vars.aux(term.body)(Nat.succ(Nat.succ(depth)))(initial_depth)
    Term.all(term.eras)(term.self)(term.name)(bind)(body);
  | (term.hash) (term.eras) (term.name) (term.body)
    let body = Term.bind_free_vars.aux(term.body)(Nat.succ(depth))(initial_depth)
    Term.lam(term.eras)(term.name)(body);
  | (term.hash) (term.eras) (term.func) (term.argm)
    let func = Term.bind_free_vars.aux(term.func)(depth)(initial_depth)
    let argm = Term.bind_free_vars.aux(term.argm)(depth)(initial_depth)
    Term.app(term.eras)(func)(argm);
  | (term.hash) (term.name) (term.expr) (term.body)
    let expr = Term.bind_free_vars.aux(term.expr)(depth)(initial_depth)
    let body = Term.bind_free_vars.aux(term.body)(Nat.succ(depth))(initial_depth)
    Term.lat(term.name)(expr)(body);
  | (term.hash) (term.done) (term.expr) (term.type)
    let expr = Term.bind_free_vars.aux(term.expr)(depth)(initial_depth)
    let type = Term.bind_free_vars.aux(term.type)(depth)(initial_depth)
    Term.ann(term.done)(expr)(type);
