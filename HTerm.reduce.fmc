HTerm.reduce: HTerm -> Defs -> HTerm
  (term) (defs)
  term<() HTerm>
  | (term.indx) (term.posi)
    HTerm.var(term.indx)(term.posi);
  | (term.name)
    Defs.get_term(defs)(term.name)<() HTerm>
    | HTerm.ref(term.name);
    | (ref_term)
      let ref_term = Term.to_hterm(ref_term)(List.nil<HTerm>)(Nat.zero)
      HTerm.reduce(ref_term)(defs);;
  | HTerm.typ;
  | (term.eras) (term.bind) (term.body)
    HTerm.all(term.eras)(term.bind)(term.body);
  | (term.body)
    HTerm.lam(term.body);
  | (term.func) (term.argm)
    let func = HTerm.reduce(term.func)(defs)
    func<() HTerm>
    | (func.indx) (func.posi)
      HTerm.app(HTerm.var(func.indx)(func.posi))(HTerm.reduce(term.argm)(defs));
    | (func.name)
      HTerm.app(HTerm.ref(func.name))(HTerm.reduce(term.argm)(defs));
    | HTerm.typ;
    | (func.eras) (func.bind) (func.body)
      HTerm.app(HTerm.all(func.eras)(func.bind)(func.body))(HTerm.reduce(term.argm)(defs));
    | (func.body)
      HTerm.reduce(func.body(term.argm))(defs);
    | (func.func) (func.argm)
      HTerm.app(HTerm.app(func.func)(func.argm))(HTerm.reduce(term.argm)(defs));;

