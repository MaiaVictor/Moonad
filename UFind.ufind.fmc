UFind.ufind: <B: Type> -> UFind -> Bits -> (UFind -> Bits -> Nat -> B) -> B
  <B> (uf) (path) (k)
  let found = Map.lookup_with<UNode>(path)(UNode.uroot(Nat.zero))(uf)
  found<() B>
  | (node) (uf)
    node<() B>
    | (node.rank) k(uf)(path)(node.rank);
    | (node.parent) UFind.ufind<B>(uf)(node.parent)(k);;
