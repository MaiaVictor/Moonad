Parsed.trm: String -> List(String) -> Parsed(Term)
  (code) (vars)
  let base_parse = Parsed.first_valid<Pair(String)(Term)>(
    List.cons<Parsed(Term)>(Parsed.all(code)(vars))(
    List.cons<Parsed(Term)>(Parsed.lam(code)(vars))(
    List.cons<Parsed(Term)>(Parsed.lat(code)(vars))(
    List.cons<Parsed(Term)>(Parsed.par(code)(vars))(
    List.cons<Parsed(Term)>(Parsed.com(code)(vars))(
    List.cons<Parsed(Term)>(Parsed.typ(code)(vars))(
    List.cons<Parsed(Term)>(Parsed.var(code)(vars))(
    List.nil<Parsed(Term)>))))))))
  Parsed.chain<Term><Term>(base_parse) | (code) (term)
  Parsed.pst(code)(term)(vars);
