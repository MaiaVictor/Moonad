// Return the position within a mininum and maximun range towards look_dir
// between_dist(self: Thing, min_range: Number, max_range: Number)
//   case self |thing
//   let dist_trg = dist_v3(self.pos, self.trg)
//   at_dist(self, max(min_range, min(max_range, dist_trg)))

TaelinArena.Game.between_dist: TaelinArena.Game.Thing -> F64 -> F64 -> F64.V3
  (self) (min_range) (max_range)
  let self_pos = TaelinArena.Game.get_thing_pos(self)
  let self_trg = TaelinArena.Game.get_thing_trg(self) // F64.V3

  // Return self.trg if dist is more than min, otherwise min_dist
  let at_min = TaelinArena.Game.at_min_dist(self)(min_range)
  // Return self.trg if dist is less than max, otherwise max_dist
  let at_max = TaelinArena.Game.at_max_dist(self)(max_range)

  let more_than_min = F64.V3.ltn(at_min)(self_trg) // Bool
  let less_than_max = F64.V3.ltn(self_trg)(at_max) // Bool

  Bool.if<F64.V3>(more_than_min)
  | Bool.if<F64.V3>(less_than_max)
    | self_trg;
    | TaelinArena.Game.at_dist(self)(max_range);;
  | TaelinArena.Game.at_dist(self)(min_range);

