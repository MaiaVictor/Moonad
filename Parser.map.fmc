// A parser is a functor
Parser.map:
  <S: Type> ->
  <E: Type> ->
  <A: Type> ->
  <B: Type> ->
  (A -> B) ->
  Parser(S)(E)(A) ->
  Parser(S)(E)(B)

  <S> <E> <A> <B> (f) (p)
  <X> (s1) (empty_value) (empty_error) (eaten_value) (eaten_error)
  p<X>(s1)
  | (s2) (a) empty_value(s2)(f(a));
  | empty_error;
  | (s2) (a) eaten_value(s2)(f(a));
  | eaten_error;
