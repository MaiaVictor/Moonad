Parser.many_till:
  <S: Type> ->
  <E: Type> ->
  <A: Type> ->
  <B: Type> ->
  Parser(S)(E)(A) ->
  Parser(S)(E)(B) ->
  Parser(S)(E)(List(A))
  <S> <E> <A> <B> (p) (q)
  Parser.plus<S><E><List(A)>
  | Parser.then<S><E><B><List(A)>(q)(Parser.pure<S><E><List(A)>(List.nil<A>));
  | Parser.bind<S><E><A><List(A)>(p) | (x)
    Parser.bind<S><E><List(A)><List(A)>(Parser.many_till<S><E><A><B>(p)(q))
    | (xs) Parser.pure<S><E><List(A)>(List.cons<A>(x)(xs));;;

